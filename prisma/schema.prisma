datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String    @id @default(cuid())
  name             String
  email            String    @unique
  emailVerified    DateTime?
  companyName      String?
  street           String?
  aptNum           String?
  city             String?
  stateProvince    String?
  zipPostalCode    String?
  phone            String?
  image            String?
  imageId          String?
  latitude         Float?
  longitude        Float?
  posts            Post[]
  hashedPassword   String?
  isAdmin          Boolean
  isVendor         Boolean
  instagram        String?
  website          String?
  facebook         String?
  resetToken       String?
  resetTokenExpiry DateTime?
  accounts         Account[]
  sessions         Session[]
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id          String   @id @default(cuid())
  User        User?    @relation(fields: [userId], references: [id])
  userId      String?
  price       String
  salePrice   String?
  images      String[]
  qty         Int
  title       String
  type        String
  textureType String
  colors      String[]
  veins       String
  bookmatched String
  width       String?
  height      String?
  imageId     String[]
}
